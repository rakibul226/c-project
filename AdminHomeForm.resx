<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>